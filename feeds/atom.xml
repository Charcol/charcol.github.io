<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>charcol's blog</title><link href="char.id.au/" rel="alternate"></link><link href="char.id.au/feeds/atom.xml" rel="self"></link><id>char.id.au/</id><updated>2017-06-30T00:00:00+10:00</updated><entry><title>Do You Want To Git Good?</title><link href="char.id.au/git-talks.html" rel="alternate"></link><published>2017-06-30T00:00:00+10:00</published><author><name>charcol</name></author><id>tag:,2017-06-30:char.id.au/git-talks.html</id><summary type="html">&lt;p&gt;A couple of months ago, the local Ruby meetup group, &lt;a class="reference external" href="https://www.meetup.com/BrisRuby/"&gt;BrisRuby&lt;/a&gt;, put out a call to see if anyone could do an introductory git talk.  It ended up turning into two talks over two months. &amp;quot;Gitting Into Version Control: an introduction to git&amp;quot; and &amp;quot;Gitting Out Of Trouble: what to do when things go wrong&amp;quot;.&lt;/p&gt;
&lt;p&gt;I've written up the content in this blog post, and the slides are linked below.&lt;/p&gt;
&lt;div class="section" id="gitting-into-version-control"&gt;
&lt;h2&gt;Gitting Into Version Control&lt;/h2&gt;
&lt;p&gt;Why use version control?&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;It keeps a change history of every file&lt;/li&gt;
&lt;li&gt;Branches let you, or several people, work on things concurrently&lt;/li&gt;
&lt;li&gt;Auditing - where features were introduced, who worked on what&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Why git?&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Used by popular code hosting services like Gitlab, Github and Bitbucket&lt;/li&gt;
&lt;li&gt;Creates a full copy of the whole repository (unlike SVN)&lt;/li&gt;
&lt;li&gt;Open source&lt;/li&gt;
&lt;li&gt;Powerful features&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Initialise a repository:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git init --bare &amp;lt;directory&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Initialise a shared repository with --bare so that it doesn't create a working tree.&lt;/p&gt;
&lt;p&gt;Clone an existing repository:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git clone &amp;lt;URL&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Edit the config:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git config --global user.name &amp;quot;Charelle Collett&amp;quot;
$ git config --global user.email &amp;quot;charcol&amp;#64;example.com&amp;quot;
$ git config --global --edit
&lt;/pre&gt;
&lt;p&gt;Remove &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--global&lt;/span&gt;&lt;/tt&gt; to change settings for a single project.&lt;/p&gt;
&lt;p&gt;See what changes will be applied:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git status
&lt;/pre&gt;
&lt;p&gt;Add files to commit:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git add &amp;lt;filename&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Or you can use &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-a&lt;/span&gt;&lt;/tt&gt; while committing&lt;/p&gt;
&lt;p&gt;Commit your changes:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git commit -m &amp;quot;message&amp;quot;
&lt;/pre&gt;
&lt;p&gt;See the history:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git log
&lt;/pre&gt;
&lt;p&gt;Move to a different branch:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git checkout &amp;lt;name-of-branch&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Create a new branch and move to it:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git checkout -b &amp;lt;name-of-branch&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Which is the same as:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git branch &amp;lt;name-of-branch&amp;gt;
$ git checkout &amp;lt;name-of-branch&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Show connections to other repositories:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git remote -v
&lt;/pre&gt;
&lt;p&gt;Pull from a certain remote:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git pull &amp;lt;remote&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Push to a specific branch:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git push &amp;lt;remote&amp;gt; &amp;lt;branch&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Add a remote:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git remote add &amp;lt;name&amp;gt; &amp;lt;url&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Only push to a bare repository!&lt;/p&gt;
&lt;p&gt;Remove a remote:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git remote rm &amp;lt;name&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Add branch config to &lt;tt class="docutils literal"&gt;.git/config&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git config --edit
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
[branch &amp;quot;new-feature&amp;quot;]
    remote = origin
    merge = refs/heads/new-feature
&lt;/pre&gt;
&lt;div class="section" id="more-info"&gt;
&lt;h3&gt;More info:&lt;/h3&gt;
&lt;p&gt;Git documentation:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://git-scm.com/book/en/v1/Getting-Started"&gt;https://git-scm.com/book/en/v1/Getting-Started&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Atlassian's git tutorial:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.atlassian.com/git/tutorials"&gt;https://www.atlassian.com/git/tutorials&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Github / Code school interactive tutorial:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://try.github.io/levels/1/challenges/1"&gt;https://try.github.io/levels/1/challenges/1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Codecademy interactive tutorial:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.codecademy.com/learn/learn-git"&gt;https://www.codecademy.com/learn/learn-git&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="gitting-out-of-trouble"&gt;
&lt;h2&gt;Gitting Out Of Trouble&lt;/h2&gt;
&lt;p&gt;There are many different ways to do the things mentioned here.&lt;/p&gt;
&lt;p&gt;Rename a branch:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git branch -m &amp;lt;oldname&amp;gt; &amp;lt;newname&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Reverting uncommitted changes:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git checkout &amp;lt;file&amp;gt;
$ git reset --hard
&lt;/pre&gt;
&lt;p&gt;Delete a branch:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git checkout master
$ git branch -D &amp;lt;branch&amp;gt;
&lt;/pre&gt;
&lt;p&gt;If you have pushed:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git push --delete &amp;lt;branch&amp;gt;
$ git fetch --prune
$ git branch -D &amp;lt;branch&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Changing a commit message for the most recent commit:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git commit --amend
&lt;/pre&gt;
&lt;p&gt;If you have pushed:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git push --force-with-lease
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;CAUTION:&lt;/em&gt; &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--force&lt;/span&gt;&lt;/tt&gt; rewrites history&lt;/p&gt;
&lt;p&gt;To change an older commit, you must rebase.&lt;/p&gt;
&lt;p&gt;To delete a commit:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git rebase -i &amp;lt;previous-commit&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Then delete the line you want to remove.&lt;/p&gt;
&lt;p&gt;If you have pushed:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git revert &amp;lt;commit&amp;gt;
$ git push
&lt;/pre&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;revert&lt;/tt&gt; creates a new commit that undoes the changes&lt;/p&gt;
&lt;p&gt;If you have committed to the wrong branch:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git branch &amp;lt;new-branch&amp;gt;
$ git reset --hard &amp;lt;commit&amp;gt;
&lt;/pre&gt;
&lt;p&gt;If you have pushed:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git revert &amp;lt;commit&amp;gt;
$ git push
$ git checkout &amp;lt;correct-branch&amp;gt;
$ git cherry-pick &amp;lt;commit&amp;gt;
&lt;/pre&gt;
&lt;p&gt;To squash commits / rewrite history / edit old commits / reword messages:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git rebase -i &amp;lt;commit&amp;gt;
&lt;/pre&gt;
&lt;p&gt;or for the four most recent commits:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git rebase -i HEAD~4
&lt;/pre&gt;
&lt;p&gt;Commits are shown oldest to newest.  &lt;tt class="docutils literal"&gt;pick&lt;/tt&gt; the oldest, and &lt;tt class="docutils literal"&gt;squash&lt;/tt&gt; the newer commits.  You can also reorder commits.&lt;/p&gt;
&lt;p&gt;If you have pushed:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git push --force-with-lease
&lt;/pre&gt;
&lt;p&gt;To get the latest changes and rebase onto those changes:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git checkout master
$ git pull
$ git checkout &amp;lt;branch&amp;gt;
$ git rebase master
&lt;/pre&gt;
&lt;p&gt;If you have issues, you may want to &lt;tt class="docutils literal"&gt;rebase &lt;span class="pre"&gt;-i&lt;/span&gt;&lt;/tt&gt; (interactive)&lt;/p&gt;
&lt;p&gt;If there are conflicts and you need to manually merge, search for &amp;gt;&amp;gt;&amp;gt;&amp;gt; to find the conflicts.&lt;/p&gt;
&lt;p&gt;Add the fixed files (&lt;tt class="docutils literal"&gt;git add &amp;lt;file&amp;gt;&lt;/tt&gt;) then &lt;tt class="docutils literal"&gt;git rebase &lt;span class="pre"&gt;--continue&lt;/span&gt;&lt;/tt&gt;.  It's also possible to &lt;tt class="docutils literal"&gt;git rebase &lt;span class="pre"&gt;--abort&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Reference log shows when the HEAD has been updated in the local repository:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git reflog [--all]
&lt;/pre&gt;
&lt;p&gt;Stash changes:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git stash
&lt;/pre&gt;
&lt;p&gt;Files need to be tracked before stashing.  (&lt;tt class="docutils literal"&gt;git add .&lt;/tt&gt; ) Or you can &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--include-untracked&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Retrieve changes and remove them from the stash:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git stash pop
&lt;/pre&gt;
&lt;p&gt;Remove from the stash:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git stash drop
&lt;/pre&gt;
&lt;p&gt;Retrieve changes but keep them in the stash:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ git stash apply
&lt;/pre&gt;
&lt;div class="section" id="small-glossary"&gt;
&lt;h3&gt;Small glossary&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;origin:&lt;/em&gt; default name for the repository you cloned from&lt;/p&gt;
&lt;p&gt;&lt;em&gt;working tree:&lt;/em&gt; where you edit the checked out branch (can have multiple)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;clean working tree:&lt;/em&gt; current files you are editing match HEAD&lt;/p&gt;
&lt;p&gt;&lt;em&gt;bare repository:&lt;/em&gt; repository without a working tree. Pushing to a non bare repo can cause conflicts&lt;/p&gt;
&lt;p&gt;&lt;em&gt;staging:&lt;/em&gt; changes to be committed&lt;/p&gt;
&lt;p&gt;&lt;em&gt;HEAD:&lt;/em&gt; is the commit at the tip of the current branch&lt;/p&gt;
&lt;p&gt;&lt;em&gt;revert:&lt;/em&gt; creates a new commit to undo changes&lt;/p&gt;
&lt;p&gt;&lt;em&gt;reset:&lt;/em&gt; changes which commit HEAD is pointing to&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="other-interesting-things"&gt;
&lt;h3&gt;Other interesting things&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;patch:&lt;/em&gt; Export changes as a patch that can be applied later&lt;/p&gt;
&lt;p&gt;&lt;em&gt;.gitignore:&lt;/em&gt; List of files that git should ignore&lt;/p&gt;
&lt;p&gt;&lt;em&gt;diff:&lt;/em&gt; See differences between commits&lt;/p&gt;
&lt;p&gt;&lt;em&gt;blame:&lt;/em&gt; See who was responsible for changes&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="more-lessons-on-presenting"&gt;
&lt;h3&gt;More lessons on presenting&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Even if you've increased the text size, someone will want it larger.&lt;/li&gt;
&lt;li&gt;Even if HDMI works with your laptop on several different projectors, it won't always work on the one you're using &amp;gt;&amp;lt;&lt;/li&gt;
&lt;li&gt;Even if a mini-DP adapter doesn't work on other projectors, it may work on the one you're using&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The discussion afterwards is always my favourite part, because it's a chance to learn from other people.  From this I found out that a colleague never uses &lt;tt class="docutils literal"&gt;git pull&lt;/tt&gt; but instead &lt;tt class="docutils literal"&gt;fetch&lt;/tt&gt; then &lt;tt class="docutils literal"&gt;rebase&lt;/tt&gt; (since pull is a fetch then merge, this avoids the merge). You can find more detail in this excellent blog post: &lt;a class="reference external" href="https://longair.net/blog/2009/04/16/git-fetch-and-merge/"&gt;git: fetch and merge, don’t pull | Mark's Blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hopefully this is useful!  Someone at the Ruby meetup suggested a potential future talk about different git workflows and branching models, but I don't think I have enough experience in different teams.  Perhaps someone else would like to research and give this talk?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="slides"&gt;
&lt;h2&gt;Slides&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://redhat.slides.com/charellecollett/deck-1?token=E29yEW2p"&gt;Gitting into Version Control by Charelle Collett&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://redhat.slides.com/charellecollett/deck-1-2?token=ALW0QSBk"&gt;Gitting Out Of Trouble! by Charelle Collett&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>Bsides Canberra 2017</title><link href="char.id.au/bsides2017.html" rel="alternate"></link><published>2017-03-19T00:00:00+10:00</published><author><name>charcol</name></author><id>tag:,2017-03-16:char.id.au/bsides2017.html</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;✔ Laptop&lt;/div&gt;
&lt;div class="line"&gt;✔ Conference shirts&lt;/div&gt;
&lt;div class="line"&gt;✔ Hacker passport&lt;/div&gt;
&lt;div class="line"&gt;✔ Black hoodie&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Equipped with a backpack, I headed to Brisbane airport for my first adventure to Canberra for the Bsides security conference. I was a bit disappointed to miss out on Bsides last year, so I made sure to get my ticket early for this one.&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;Packing the essentials for &lt;a href="https://twitter.com/BSidesCbr"&gt;@BSidesCbr&lt;/a&gt; &lt;a href="https://t.co/xi2uiQL1vt"&gt;pic.twitter.com/xi2uiQL1vt&lt;/a&gt;&lt;/p&gt;&amp;mdash; Charelle Collett (@Charcol0x89) &lt;a href="https://twitter.com/Charcol0x89/status/842168582305808384"&gt;March 16, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;div class="section" id="about-bsides"&gt;
&lt;h2&gt;About Bsides&lt;/h2&gt;
&lt;p&gt;Security Bsides is a hacker conference in the US that was founded in 2009, but is now held all over the world by many different people.  Last year was the first Bsides in Australia, and this year it has doubled in size to 690 attendees, with around 250 on the wait list.  They've estimated that 15% of the attendees are female, based upon the number of ladies shirts ordered (all registrations come with a shirt).  The CFP acceptance rate was ~19%.&lt;/p&gt;
&lt;p&gt;As well as the main presentation track, there was a hardware &amp;amp; wireless presentation track and a separate area with workshops through both days.  Additionally, there were numerous competitions held over the conference, including a capture the flag (ctf), in which you complete challenges across various disciplines (reverse engineering, crypto, programming, forensics etc.), a table full of tamper evident seals and tags, lock picking tables and contest, an incident response challenge, a bug bounty simulation, and a counter intelligence simulation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="day-0"&gt;
&lt;h2&gt;Day 0&lt;/h2&gt;
&lt;p&gt;My first stop after checking in was to pre-register, where I recieved a pack with the conference badges, shirt, stickers, booklet, and lanyard.  One of the badges was a mifare nfc card.  The other was a custom piece of hardware designed and put together by the organisers and volunteers.  (Come visit my desk to take a look).&lt;/p&gt;
&lt;p&gt;Afterwards, I went to a women's networking dinner.  There I spoke to several accomplished women and speakers, who also helped develop a presentation idea I've been sitting on for a while.  It's good to see this kind of event, and to meet some role models in the security industry.&lt;/p&gt;
&lt;p&gt;When that ended, I found other attendees having pre-conference drinks.  Even though I don't really drink, it's a great opportunity to meet people - and it paid off.  I met someone who uses OpenStack day to day, which was pretty exciting - this is the first time since starting at Red Hat that I've gotten to really speak with someone who uses the product and the docs.  The conversation also got others around asking about OSP, so I was able to explain what it does and answer a few of their questions, which was exciting.&lt;/p&gt;
&lt;p&gt;Back at the accommodation it was time to read the schedule and plan the next couple of days.  There's so much on, it's impossible to attend everything.  At my very first hacker con I made the mistake of getting caught up in the ctf and not seeing anything else.&lt;/p&gt;
&lt;p&gt;Friday:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;9am Opening and Keynote (&amp;quot;From 2600 to 1600 Pennsylvania Ave: Reflections on 15 years of infosec reporting&amp;quot; by Patrick Gray)&lt;/p&gt;
&lt;p&gt;10am &amp;quot;Bug Bounty Simulation Contest Introduction&amp;quot; - Shubs.  Looks fun, and I  would learn something.&lt;/p&gt;
&lt;p&gt;2:30am &amp;quot;Human vs Machine: A source code review challenge&amp;quot;&lt;/p&gt;
&lt;p&gt;Might go:&lt;/p&gt;
&lt;p&gt;11:30am &amp;quot;How to Program the Bsides Canberra 2017 badge&amp;quot; - would be interesting&lt;/p&gt;
&lt;p&gt;2pm &amp;quot;Shiny Toys vs Tools - getting better value out of your detection tool suite&amp;quot;&lt;/p&gt;
&lt;p&gt;The rest of the free time will be for ctf &amp;amp; bug bounty simulation&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Saturday:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;9:10am  Infosec 101.1 - since I've mostly been self-taught with security things, I'd probably learn something here&lt;/p&gt;
&lt;p&gt;2:30pm  PANEL - this looks good because topics include Shadowbrokers, Did Russia hack the US election?, are hacker cons sexist?, state of Australasian hackers cons and census fail&lt;/p&gt;
&lt;p&gt;Again, the rest of the free time will be for the ctf &amp;amp; bug bounty simulation.  I also want to try escape from handcuffs at the lock picking table, and need to get my passport stamped.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Lastly, I did the usual preparations before going to a hacker con:  Turn off WiFi on phone and laptop (and made sure no sensitive information was on either of those things).  Only going to access internet through usb-tethered phone (for searching things when doing the ctf).  Made sure all nfc/rfid cards are in shielded sleeves.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="day-1"&gt;
&lt;h2&gt;Day 1&lt;/h2&gt;
&lt;p&gt;The first day started with a keynote from Patrick Gray, who hosts a podcast I listen to, Risky Business. The two things that stuck with me from that talk were that:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Attribution is easy: states mimic activists (I'm not sure how far I believe this)&lt;/li&gt;
&lt;li&gt;Sources have complex motives: self interest, public interest, ego, rage&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Afterwards, I made my way to the bug bounty simulation introduction, and spent a few hours exploring that.  One thing that was mentioned in the introduction was that a well written report will attract more money than a bad one, which highlights the importance of clear communication and writing skills.&lt;/p&gt;
&lt;p&gt;In the afternoon, I spent a few hours exploring the ctf then made it to a few talks.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&amp;quot;Human vs Machine: A source code review challenge&amp;quot; - Kate McInnes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this talk they tried to compare several tools, as well as human software engineers to see how many vulnerabilities they could find in source code. Of course, the conclusion was both methods are valuable in their own ways.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&amp;quot;The evolution of flight data recovery at the ATSB - from foil to flash&amp;quot; - Aaron Holman&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I had originally overlooked this on the timetable and I'm not sure how - it was about forensics to recover flight data information, not just from black boxes but also other electronics found on smaller aircraft.   This speaker ended up winning the 'best new speaker' award.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="day-2"&gt;
&lt;h2&gt;Day 2&lt;/h2&gt;
&lt;p&gt;I started this day with the Infosec 101 'workshop'.  They demonstrated some concepts and also provided a nifty pdf guide which I will go through more thoroughly at a later date.&lt;/p&gt;
&lt;p&gt;Something fairly high on my 'to do' list was to get my hacker passport stamped.  Each AU/NZ hacker conference some people in the community make sure there is a custom stamp, usually with the conference logo.  It's a pretty cool record of all the conferences you've been to.&lt;/p&gt;
&lt;p&gt;After watching a physical security talk (&amp;quot;Breaching physical security, and generally causing mayhem, with wireless signals&amp;quot; - T.J. Acton), I made my way to the lock picking tables.  Another thing on my list was to try get out of handcuffs.  I was told at Kiwicon that it was pretty easy, but never got around to it.  After successfully learning how to do that, someone was kind enough to disassemble a padlock for us and explain the mechanisms and methods by which manufacturers try make them more difficult to pick.&lt;/p&gt;
&lt;p&gt;After lunch at a congregation of food containers down the road, I poked around at the bug bounty a little more, then watch the panel discussion.  The panel ended up talking a lot about Russia, which was interesting for a while, but I think that topic could have wrapped up a little sooner.  They very briefly touched upon the lack of diversity, as one of the panelists said &amp;quot;I'm the only black guy in the room&amp;quot;, so and they promised to get back to that topic later as it was one of the issues for discussion.  However, there ended up being not enough time, which was unfortunate because I would have liked to hear their views and I think it's an important topic for all of the conference attendees to think about.&lt;/p&gt;
&lt;p&gt;The conference close was fun to watch, as all the winners of the various competitions were announced.  They also announced that Bsides will be moving to a new venue next year, and as a result, doubling in capacity.  I'm looking forward to it!&lt;/p&gt;
&lt;p&gt;The afterparty was held at a gaming bar downtown, where I smashed a couple of games of Mario Kart 64.  The afterparty is a great opportunity to meet new people and chat more, so here I got to catch up with old friends, and meet a lot of new people.  One of these people was a penetration tester who told me that about 30% of his work is writing, again showing the importance of writing skills.  Another person gave me a fist bump upon finding out I was a tech writer: &amp;quot;Awesome!  Documentation is important.&amp;quot;  It was a good way to end the weekend.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-i-got-out-of-it-and-concluding-thoughts"&gt;
&lt;h2&gt;What I got out of it and concluding thoughts&lt;/h2&gt;
&lt;p&gt;Already knew report writing was important in this industry, but to hear bug bounties would be inclined to pay more for a well written report reinforces this.  Also, the amount of respect people showed for documentation when I mentioned technical writing was good to see.  When mentioning Red Hat, people would often say something like &amp;quot;Oh, do you know x person?  He's a great guy&amp;quot;.  It seems like many people had positive things to say.&lt;/p&gt;
&lt;p&gt;A message that was reiterated over the weekend was that security is easily bypassed by users not knowing how to use a system properly.  Most exploits are due to misconfiguration rather than 1337 zero days, so it is important to educate users, but also to create sensible defaults.  You want security to be easy, otherwise people aren't going to bother.&lt;/p&gt;
&lt;p&gt;Lastly, how did my strategy go to try everything? I'm glad I did, because yay, new experiences, but I feel like my time was very split and it was difficult to get into any of the challenges without dedicating contiguous time.  I think for my next con I'll pick a few talks that look interesting, but then spend my time getting stuck into something, as that feels more productive.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>linux.conf.au 2017</title><link href="char.id.au/lca2017.html" rel="alternate"></link><published>2017-02-01T00:00:00+10:00</published><author><name>charcol</name></author><id>tag:,2017-01-29:char.id.au/lca2017.html</id><summary type="html">&lt;p&gt;This year, &lt;a class="reference external" href="https://linux.conf.au/"&gt;Linux Conference Australia&lt;/a&gt; (LCA) was held in the brisk, bright city of Hobart, capital of the oft-forgotten state of Tasmania.  Honestly, it isn't a ciy I would visit without a reason, but I'm glad LCA drew me out there.  The wind was cold and the sun blazed, but the scenery was lovely, as were the locals.&lt;/p&gt;
&lt;div class="section" id="about-lca"&gt;
&lt;h2&gt;About LCA&lt;/h2&gt;
&lt;p&gt;LCA is a 5 day conference, Mon-Fri, with 12 miniconfs, and 5 talk tracks with a separate room for tutorials and BoF sessions.  A miniconf is a full track on the Monday or Tuesday dedicated to a specific topic, for example security and privacy, kernel, documentation etc.  A BoF, birds of a feather, session is an informal meetup for like-minded people, and can be organised by anyone.  Examples are the running BoF for people who like to run together early in the morning, martial arts, wool/knitting, astronomy... there are far too many to mention here.&lt;/p&gt;
&lt;p&gt;Another part of LCA is all of the social events.  There are the offical conference ones, like the Professional Delegates Networking Session (PDNS), speaker's dinner and of course the penguin dinner, but there are also many unofficial events, the unPDNS and various gatherings in local pubs and restaurants.  Needless to say it is a very full-on week, but very worthwhile.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;2017&lt;/h2&gt;
&lt;p&gt;This year I was an AV volunteer, which in my opinion, also gets you the best views and audio quality.  Thanks to Ryan, Tim and the rest of the AV team, all of the talks were recorded using open hardware and open source software.  They were up on YouTube not long after the event and HQ downloads are also available from the Linux Australia mirror.&lt;/p&gt;
&lt;p&gt;YouTube: &lt;a class="reference external" href="https://www.youtube.com/user/linuxconfau2017"&gt;https://www.youtube.com/user/linuxconfau2017&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WebM HQ Encodes: &lt;a class="reference external" href="http://mirror.linux.org.au/pub/linux.conf.au/2017/"&gt;http://mirror.linux.org.au/pub/linux.conf.au/2017/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;LCA2017 Video was a collaboration between Next Day Video and the timvideos.us
project, with all rooms captured using open hardware (Numato Opsis hardware for
HDMI capture), running open source HDMI2USB firmware, using open source video
mixers (voctomix), post-processed using open source automation/editors
(veyepar, Shotcut).&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://mirror.linux.org.au/pub/linux.conf.au/2017/1_README.md"&gt;http://mirror.linux.org.au/pub/linux.conf.au/2017/1_README.md&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are so many talks, it would take a good chunk of time to watch them all.  It's really difficult to pick only a few to recommend, especially since everyone's interests are varied, so my advice is to look through the list and see what appeals to you.  That said, here are some to get you started:&lt;/p&gt;
&lt;div class="section" id="interesting"&gt;
&lt;h3&gt;Interesting&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=antho4VAe10"&gt;Imposter Syndrome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=eElo1B7Q-4Q"&gt;Election Software&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=oaZdarL9ttM"&gt;The Kernel Report&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=j4pXxfgmxWM"&gt;ChaosKey to Production&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=vv11XMG5UJg"&gt;U 2 Can U2F&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=3BNNY6_r3tQ&amp;amp;t=1894s"&gt;Network Protocol Analysis for IoT Devices&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="entertaining"&gt;
&lt;h3&gt;Entertaining&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://youtu.be/brNmfD1Lb7M?t=24m27s"&gt;Emoji Archeology 101&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=T3NKMi_f21Q"&gt;/sys/class/gpio/Parking Brake: Hacking my car&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=kZr-8_9zuqM"&gt;Politely socially engineering IRL using sneaky magician techniques&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="i-ve-yet-to-watch-but-want-to-soon"&gt;
&lt;h3&gt;I've yet to watch, but want to soon&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=qcBol_s410k"&gt;Human-Driven Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=jY_C-Z0qMSo"&gt;Kernel documentation: what we have and where it's going&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=Fzmm87oVQ6c"&gt;My personal fight against the modern laptop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=_UitFbzmIR0"&gt;Stranger in a strange land: Breaking language monocultures with open source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There were many other fantastic talks, but again, go through and see what interests you.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="concluding-thoughts"&gt;
&lt;h2&gt;Concluding thoughts&lt;/h2&gt;
&lt;p&gt;It takes a lot of people a lot of time and effort to organise something of this scale.  I think it was very well run and think Chris and everyone involved did a stellar job in pulling it off so smoothly. LCA2018 will be held in Sydney, during the Sydney festival, and it will be interesting to see how the focus shifts to cater to that audience.  While there are so many high quality talks through week that it's difficult to decide what to watch, personally, in the future I'd like to see more workshops and hands-on events, to encourage people creating and collaborating while there, similar to the sprints at Pycon.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>Trying out the i3 window manager on Fedora</title><link href="char.id.au/i3wm.html" rel="alternate"></link><published>2016-12-06T00:00:00+10:00</published><author><name>charcol</name></author><id>tag:,2016-12-06:char.id.au/i3wm.html</id><summary type="html">&lt;p&gt;** i3 Window Manager is quite well documented.  These are mostly notes for my own reference at this stage.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://i3wm.org/i3status/manpage.html"&gt;https://i3wm.org/i3status/manpage.html&lt;/a&gt;
&lt;a class="reference external" href="http://i3wm.org/docs/userguide.html#_using_workspaces"&gt;http://i3wm.org/docs/userguide.html#_using_workspaces&lt;/a&gt;
&lt;a class="reference external" href="https://i3wm.org/docs/userguide.html"&gt;https://i3wm.org/docs/userguide.html&lt;/a&gt;
&lt;a class="reference external" href="https://fedoramagazine.org/getting-started-i3-window-manager/"&gt;https://fedoramagazine.org/getting-started-i3-window-manager/&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="why-i3wm"&gt;
&lt;h2&gt;Why i3wm?&lt;/h2&gt;
&lt;/div&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;blockquote&gt;
&lt;tt class="docutils literal"&gt;sudo dnf install i3 i3status dmenu i3lock&lt;/tt&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="custom-configuration"&gt;
&lt;h2&gt;Custom configuration&lt;/h2&gt;
&lt;p&gt;Volume, brightness, lock screen, wallpaper&lt;/p&gt;
&lt;p&gt;Swap mouse buttons to be left handed:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;|&amp;nbsp; exec xmodmap &lt;span class="pre"&gt;-e&lt;/span&gt; &amp;quot;pointer = 3 2 1&amp;quot;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Change the movement keys to match vim:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;# change focus&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;bindsym $mod+h focus left&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;bindsym $mod+j focus down&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;bindsym $mod+k focus up&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;bindsym $mod+l focus right&lt;/tt&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right&lt;/p&gt;
&lt;p&gt;Now that $mod+h is being used to move left, we need to modify the key for horizontal split.
I chose 'b' because it's fairly close to h, and next to 'v'.  To me it makes sense to have them next to each other.&lt;/p&gt;
&lt;p&gt;# split in horizontal orientation
bindsym $mod+b split h&lt;/p&gt;
&lt;p&gt;# Start network manager
exec --no-startup-id nm-applet&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="i3-status"&gt;
&lt;h2&gt;i3 Status&lt;/h2&gt;
&lt;div class="section" id="battery-monitor"&gt;
&lt;h3&gt;Battery monitor&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;battery 1 {&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;format = &amp;quot;%status %percentage %remaining&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;integer_battery_capacity = true&lt;/div&gt;
&lt;div class="line"&gt;hide_seconds = true&lt;/div&gt;
&lt;div class="line"&gt;status_chr = ⚡&lt;/div&gt;
&lt;div class="line"&gt;status_bat = 🔋&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="volume"&gt;
&lt;h3&gt;Volume&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;volume master {&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;format = &amp;quot;♪: %volume&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;format_muted = &amp;quot;♪: mute&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;device = &amp;quot;default&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;mixer = &amp;quot;Master&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;mixer_idx = 0&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;By default, i3status looks for configuration files in the following order:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;~/.i3status.conf&lt;/p&gt;
&lt;p&gt;~/.config/i3status/config (or $XDG_CONFIG_HOME/i3status/config if set)&lt;/p&gt;
&lt;p&gt;/etc/i3status.conf&lt;/p&gt;
&lt;p&gt;/etc/xdg/i3status/config (or $XDG_CONFIG_DIRS/i3status/config if set)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>Podcast Recommendations</title><link href="char.id.au/podcasts.html" rel="alternate"></link><published>2017-02-01T00:00:00+10:00</published><author><name>charcol</name></author><id>tag:,2016-11-11:char.id.au/podcasts.html</id><summary type="html">&lt;div class="section" id="current-list"&gt;
&lt;h2&gt;Current list&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;99% Invisible - &lt;em&gt;A consistently good podcast about design and architecture.  Hosted by Roman Mars.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Reply All - &lt;em&gt;Stories from the internet.  Hosted by PJ Vogt and Alex Goldman of TL;DR&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Planet Money - &lt;em&gt;Interesting stories about the economy&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Bad Voltage - &lt;em&gt;Mostly about open source and technology.  Hosts are entertaining&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="currently-subscribed-but-need-to-catch-up"&gt;
&lt;h3&gt;Currently subscribed, but need to catch up&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Radiolab&lt;/li&gt;
&lt;li&gt;バイリンガルニュース(Bilingual News)&lt;/li&gt;
&lt;li&gt;Developer Tea&lt;/li&gt;
&lt;li&gt;This American Life&lt;/li&gt;
&lt;li&gt;StartUp Podcast&lt;/li&gt;
&lt;li&gt;Invisibilia&lt;/li&gt;
&lt;li&gt;Paul's Security Weekly&lt;/li&gt;
&lt;li&gt;Risky Business&lt;/li&gt;
&lt;li&gt;The Silver Bullet Security Podcast&lt;/li&gt;
&lt;li&gt;Why Are People Into That?!&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="used-to-listen-to"&gt;
&lt;h3&gt;Used to listen to&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Mystery Show - &lt;em&gt;Now discontinued, but I probably would have stopped listening anyway.  That said, the toast episode is probably one of the single best episodes of a podcast I've ever listened to.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Serial - &lt;em&gt;Listened to Season 1, didn't get around the starting Season 2&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Freakonomics&lt;/li&gt;
&lt;li&gt;Security Now&lt;/li&gt;
&lt;li&gt;TL;DR - &lt;em&gt;Discontinued&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="yet-to-try"&gt;
&lt;h3&gt;Yet to try&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Talk Python To Me&lt;/li&gt;
&lt;li&gt;Podcast.__init__&lt;/li&gt;
&lt;li&gt;CodeNewbie&lt;/li&gt;
&lt;li&gt;Linux Outlaws&lt;/li&gt;
&lt;li&gt;The Wow! Signal Podcast&lt;/li&gt;
&lt;li&gt;FLOSS Weekly&lt;/li&gt;
&lt;li&gt;Programming Throwdown&lt;/li&gt;
&lt;li&gt;Adam Ruins Everything&lt;/li&gt;
&lt;li&gt;Geek News Radio&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feel free to tweet me more recommendations.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>Creating a Static Site with Pelican</title><link href="char.id.au/pelican.html" rel="alternate"></link><published>2016-06-08T23:58:00+10:00</published><author><name>charcol</name></author><id>tag:,2016-06-08:char.id.au/pelican.html</id><summary type="html">&lt;p&gt;I've finally gotten around to creating a blog with Pelican.  Pelican is a simple static site generator, written in Python.&lt;/p&gt;
&lt;div class="section" id="why-pelican"&gt;
&lt;h2&gt;Why Pelican?&lt;/h2&gt;
&lt;p&gt;I've found it very easy to use, and since the site is static, it can be hosted with GitHub pages.&lt;/p&gt;
&lt;div class="section" id="example"&gt;
&lt;h3&gt;Example&lt;/h3&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;gt; pip install pelican&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;gt; &lt;span class="pre"&gt;pelican-themes&lt;/span&gt; &lt;span class="pre"&gt;--install&lt;/span&gt; &lt;span class="pre"&gt;pelican-alchemy/&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;gt; pelican &lt;span class="pre"&gt;-r&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-r&lt;/span&gt;&lt;/tt&gt; will cause it to autoreload if changes are made to the content.&lt;/p&gt;
&lt;p&gt;You can use &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-o&lt;/span&gt;&lt;/tt&gt; to specify the output folder.&lt;/p&gt;
&lt;p&gt;If you didn't specify a theme with pelican-themes, you may with &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-t&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--relative-urls&lt;/span&gt;&lt;/tt&gt; can either be specified here, or in pelicanconf.py for development:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;RELATIVE_URLS = True&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;gt; make serve&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;This will cd into the output directory and run the module pelican.server&lt;/p&gt;
&lt;p&gt;(&lt;tt class="docutils literal"&gt;cd /home/charcol/whatever/else/here/output &amp;amp;&amp;amp; python &lt;span class="pre"&gt;-m&lt;/span&gt; pelican.server&lt;/tt&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>Test Post Please Ignore</title><link href="char.id.au/test.html" rel="alternate"></link><published>2016-06-08T00:00:00+10:00</published><author><name>charcol</name></author><id>tag:,2016-06-08:char.id.au/test.html</id><summary type="html">&lt;p&gt;Here is some content for this test post.&lt;/p&gt;
</summary></entry></feed>